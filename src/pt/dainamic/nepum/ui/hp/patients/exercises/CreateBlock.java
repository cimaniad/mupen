/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pt.dainamic.nepum.ui.hp.patients.exercises;

import java.awt.Image;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import pt.dainamic.nepum.model.Block;
import pt.dainamic.nepum.model.Domain;
import pt.dainamic.nepum.model.Exercise;
import pt.dainamic.nepum.model.Patient;
import pt.dainamic.nepum.model.SubDomain;
import pt.dainamic.nepum.ws.BlockWS;
import pt.dainamic.nepum.ws.DomainWS;
import pt.dainamic.nepum.ws.ExerciseWS;
import pt.dainamic.nepum.ws.SubDomainWS;

/**
 *
 * @author jorge
 */
public class CreateBlock extends javax.swing.JFrame {

    /**
     * Creates new form PrescribeSession
     */
    private Logger log = Logger.getLogger(CreateBlock.class);
    private DefaultTableModel tableModelSel;
    private DefaultTableModel tableModelPro;
    private DomainWS dWS;
    private List<Domain> dList;
    private SubDomainWS sdWS;
    private List<SubDomain> sdList;
    private ExerciseWS exWS;
    private List<Exercise> propExList;
    private List<Exercise> selectedExList;
    private BlockWS bWS;
    private Patient p;
    private int idHP;

    public CreateBlock(Patient p, int idHP) {
        try {
            initComponents();
            setIcon();
            this.p = p;
            this.idHP = idHP;
            bWS = new BlockWS();
            dWS = new DomainWS();
            dList = new ArrayList<>();
            dList = dWS.getAllDomains();
            sdWS = new SubDomainWS();
            exWS = new ExerciseWS();
            selectedExList = new ArrayList<>();
            drawDomainCombo();
            drawSubDomainCombo();
            drawPropExerTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(CreateBlock.this,
                    e.getMessage(), "Erro ao carregar dados para criação de um bloco", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelWallpaper = new javax.swing.JPanel();
        jPanelInformation = new javax.swing.JPanel();
        jLabelCreateBlock = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelDiscription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jLabelDomain = new javax.swing.JLabel();
        jLabelSubDomain = new javax.swing.JLabel();
        jComboBoxDomain = new javax.swing.JComboBox();
        jComboBoxSubDomain = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableSelectedExercises = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProposenExercises = new javax.swing.JTable();
        jButtonBack = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonSelect = new javax.swing.JButton();
        jLabelInformation = new javax.swing.JLabel();
        jLabelwallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(705, 520));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelWallpaper.setMaximumSize(new java.awt.Dimension(700, 500));
        jPanelWallpaper.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelInformation.setMaximumSize(new java.awt.Dimension(680, 380));
        jPanelInformation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelCreateBlock.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabelCreateBlock.setText("Criar bloco");
        jPanelInformation.add(jLabelCreateBlock, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabelName.setText("Nome:");
        jPanelInformation.add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));
        jPanelInformation.add(jTextFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 230, -1));

        jLabelDiscription.setText("Descrição:");
        jPanelInformation.add(jLabelDiscription, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, -1, 30));

        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDescription);

        jPanelInformation.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 230, 80));

        jLabelDomain.setText("Dominio:");
        jPanelInformation.add(jLabelDomain, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        jLabelSubDomain.setText("Sub-domínio:");
        jPanelInformation.add(jLabelSubDomain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 20));

        jComboBoxDomain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDomainActionPerformed(evt);
            }
        });
        jPanelInformation.add(jComboBoxDomain, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 230, -1));

        jComboBoxSubDomain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSubDomainActionPerformed(evt);
            }
        });
        jPanelInformation.add(jComboBoxSubDomain, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 230, -1));

        jTableSelectedExercises.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Exercícios Selecionados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSelectedExercises.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSelectedExercisesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableSelectedExercises);

        jPanelInformation.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 260, 140));

        jTableProposenExercises.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Exercícios Propostos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProposenExercises.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProposenExercisesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableProposenExercises);

        jPanelInformation.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 260, 140));

        jButtonBack.setText("Voltar");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });
        jPanelInformation.add(jButtonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 340, -1, -1));

        jButtonSave.setText("Guardar");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jPanelInformation.add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 340, -1, -1));

        jButtonSelect.setText("<>");
        jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionPerformed(evt);
            }
        });
        jPanelInformation.add(jButtonSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, 70, -1));

        jLabelInformation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pt/dainamic/nepum/images/backGround/second.jpg"))); // NOI18N
        jPanelInformation.add(jLabelInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 380));

        jPanelWallpaper.add(jPanelInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 680, 380));

        jLabelwallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pt/dainamic/nepum/images/backGround/first.jpg"))); // NOI18N
        jPanelWallpaper.add(jLabelwallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanelWallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxSubDomainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSubDomainActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBoxSubDomainActionPerformed

    private void jComboBoxDomainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDomainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDomainActionPerformed

    private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionPerformed

        if ( jTableProposenExercises.getSelectedRow() != -1) {
            selectedExList.add(getExerciseProAtTable());

        } else if (jTableSelectedExercises.getSelectedRow() != -1) {
            selectedExList.remove(jTableSelectedExercises.getSelectedRow());

        }
        drawPropExerTable();
        drawSelecExerTable();

    }//GEN-LAST:event_jButtonSelectActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        bWS.saveBlock(loadBlockFromPanel());
        int idB = bWS.getLastBlock().getIdBlock();
        
        for (Exercise e : selectedExList) {
            exWS.saveAssignExercise( idB, e.getIdExercise());
        }
            new PrescribeSession(p, idHP).setVisible(true);
            dispose();
        
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTableProposenExercisesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProposenExercisesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            new ExerciseInterface(getExerciseProAtTable()).setVisible(true);
        }
    }//GEN-LAST:event_jTableProposenExercisesMouseClicked

    private void jTableSelectedExercisesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSelectedExercisesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            new ExerciseInterface(getExerciseSelAtTable()).setVisible(true);
        }
    }//GEN-LAST:event_jTableSelectedExercisesMouseClicked

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        new PrescribeSession(p, idHP).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed
    private void drawDomainCombo() {
        try {
            for (Domain d : dList) {
                jComboBoxDomain.addItem(d.getName());
            }
        } catch (Exception ex) {
            log.error(ex.getMessage());
            JOptionPane.showMessageDialog(CreateBlock.this, "Erro ao carregar a tabela dos \ndominios",
                    "Erro  Domínio", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void drawSubDomainCombo() {
        try {
            int index = jComboBoxDomain.getSelectedIndex();
            sdList = sdWS.getSubDomainByDomain(dList.get(index).getIdDomain());
            for (SubDomain sd : sdList) {
                jComboBoxSubDomain.addItem(sd.getName());
            }
        } catch (Exception ex) {
            log.error(ex.getMessage());
            JOptionPane.showMessageDialog(CreateBlock.this, "Erro ao carregar a tabela dos \nsub-dominios",
                    "Erro  Sub Domínios", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void drawPropExerTable() {
        try {
            tableModelPro = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int i, int i1) {
                    return false;
                }
            };
            jTableProposenExercises.setModel(tableModelPro);
            tableModelPro.addColumn("Exercícios Propostos");

            int index = jComboBoxSubDomain.getSelectedIndex();
            propExList = exWS.getExerciseBySubDomain(sdList.get(index).getIdSubDomain());
            for (Exercise ex : propExList) {
                tableModelPro.addRow(new Object[]{ex.getName()});
            }
        } catch (Exception ex) {
            log.error(ex.getMessage());
            JOptionPane.showMessageDialog(CreateBlock.this, "Erro ao carregar a tabela dos \nexercícios propostos",
                    "Erro  Exercícios propostos", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void drawSelecExerTable() {
        try {
            tableModelSel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int i, int i1) {
                    return false;
                }
            };
            jTableSelectedExercises.setModel(tableModelSel);
            tableModelSel.addColumn("Exercícios Selecionados");
            for (Exercise ex : selectedExList) {
                tableModelSel.addRow(new Object[]{ex.getName()});
            }

        } catch (Exception ex) {
            log.error(ex.getMessage());
            JOptionPane.showMessageDialog(CreateBlock.this, "Erro ao carregar a tabela dos \nexercícios selecionados",
                    "Erro  Exercícios selecionados", JOptionPane.ERROR_MESSAGE);
        }

    }

    private Exercise getExerciseSelAtTable() {
        return propExList.get(jTableSelectedExercises.getSelectedRow());
    }

    private Exercise getExerciseProAtTable() {
        return propExList.get(jTableProposenExercises.getSelectedRow());
    }

    private Block loadBlockFromPanel() {
        String warn = validator();
        if (!warn.isEmpty()) {
            throw new RuntimeException("Preencha o(s) seguintes dado(s): " + warn);
        }
        String name = jTextFieldName.getText();
        String description = jTextAreaDescription.getText();
        return new Block(name, description, 1);   // resolver id profissional
    }

    private String validator() {
        StringBuilder warns = new StringBuilder();
        warns.append(jTextFieldName.getText().isEmpty() ? "Nome, " : "");
        warns.append(jTextAreaDescription.getText().isEmpty() ? "Descriçao, " : "");

        if (!warns.toString().isEmpty()) {
            warns.delete(warns.toString().length() - 2, warns.toString().length());
            warns.append("!");
        }

        return warns.toString();
    }

    

    private void setIcon() {
        List<Image> icons = new ArrayList<>();
        icons.add(new ImageIcon(getClass().getResource("/pt/dainamic/nepum/images/logo.png")).getImage());
        icons.add(new ImageIcon(getClass().getResource("/pt/dainamic/nepum/images/logo-icon.png")).getImage());
        setIconImages(icons);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSelect;
    private javax.swing.JComboBox jComboBoxDomain;
    private javax.swing.JComboBox jComboBoxSubDomain;
    private javax.swing.JLabel jLabelCreateBlock;
    private javax.swing.JLabel jLabelDiscription;
    private javax.swing.JLabel jLabelDomain;
    private javax.swing.JLabel jLabelInformation;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelSubDomain;
    private javax.swing.JLabel jLabelwallpaper;
    private javax.swing.JPanel jPanelInformation;
    private javax.swing.JPanel jPanelWallpaper;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableProposenExercises;
    private javax.swing.JTable jTableSelectedExercises;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables
}
